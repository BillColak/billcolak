/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 MichelleDancing.glb -d-t
*/

import React, {useEffect, useRef, useState} from 'react'
import {useGLTF, useAnimations} from '@react-three/drei'
import {useControls} from "leva";


export default function MichelleDancing(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/MichelleDancing.glb', '-t')
  const { actions } = useAnimations(animations, group)

  const options = ["HipHop", "BreakDance"]
  const [ animationIndex, setAnimationIndex ] = useState("HipHop")

  useControls( {
    Dance: {
        value: "HipHop",
        options: options,
        onChange: (value) => {
            setAnimationIndex(value)
          console.log("Dance: ", value)
        }
    }
  })


  useEffect(() => {
    actions[animationIndex].play()
    return () => {
      actions[animationIndex].stop()
    }
  }, [actions, animationIndex])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Michelle" rotation={[Math.PI / 2, 0, 0]} scale={0.01} position={[0,-0.5,0]}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Ch03" geometry={nodes.Ch03.geometry} material={materials.Ch03_Body} skeleton={nodes.Ch03.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/MichelleDancing.glb')
